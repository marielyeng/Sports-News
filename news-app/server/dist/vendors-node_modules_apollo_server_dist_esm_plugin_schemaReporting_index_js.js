"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendors-node_modules_apollo_server_dist_esm_plugin_schemaReporting_index_js";
exports.ids = ["vendors-node_modules_apollo_server_dist_esm_plugin_schemaReporting_index_js"];
exports.modules = {

/***/ "../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/native.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/native.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  randomUUID: (crypto__WEBPACK_IMPORTED_MODULE_0___default().randomUUID)\n});\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/native.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/regex.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/regex.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/regex.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/rng.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/rng.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/rng.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/stringify.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/stringify.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   unsafeStringify: () => (/* binding */ unsafeStringify)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/stringify.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/v4.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/v4.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ \"../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/native.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ \"../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/stringify.js\");\n\n\n\n\nfunction v4(options, buf, offset) {\n  if (_native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID && !buf && !options) {\n    return _native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/v4.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/validate.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/validate.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/validate.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/dist/esm/plugin/schemaIsSubgraph.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@apollo/server/dist/esm/plugin/schemaIsSubgraph.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   schemaIsSubgraph: () => (/* binding */ schemaIsSubgraph)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"../../node_modules/graphql/type/definition.mjs\");\n\nfunction schemaIsSubgraph(schema) {\n    const serviceType = schema.getType('_Service');\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(serviceType)) {\n        return false;\n    }\n    const sdlField = serviceType.getFields().sdl;\n    if (!sdlField) {\n        return false;\n    }\n    let sdlFieldType = sdlField.type;\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(sdlFieldType)) {\n        sdlFieldType = sdlFieldType.ofType;\n    }\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(sdlFieldType)) {\n        return false;\n    }\n    return sdlFieldType.name == 'String';\n}\n//# sourceMappingURL=schemaIsSubgraph.js.map\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/dist/esm/plugin/schemaIsSubgraph.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/dist/esm/plugin/schemaReporting/index.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@apollo/server/dist/esm/plugin/schemaReporting/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloServerPluginSchemaReporting: () => (/* binding */ ApolloServerPluginSchemaReporting)\n/* harmony export */ });\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var _internalPlugin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internalPlugin.js */ \"../../node_modules/@apollo/server/dist/esm/internalPlugin.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ \"../../node_modules/@apollo/server/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"../../node_modules/graphql/type/validate.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"../../node_modules/graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ \"../../node_modules/graphql/utilities/printSchema.mjs\");\n/* harmony import */ var _schemaReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schemaReporter.js */ \"../../node_modules/@apollo/server/dist/esm/plugin/schemaReporting/schemaReporter.js\");\n/* harmony import */ var _schemaIsSubgraph_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../schemaIsSubgraph.js */ \"../../node_modules/@apollo/server/dist/esm/plugin/schemaIsSubgraph.js\");\n/* harmony import */ var _generated_packageVersion_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../generated/packageVersion.js */ \"../../node_modules/@apollo/server/dist/esm/generated/packageVersion.js\");\n/* harmony import */ var _utils_computeCoreSchemaHash_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/computeCoreSchemaHash.js */ \"../../node_modules/@apollo/server/dist/esm/utils/computeCoreSchemaHash.js\");\n\n\n\n\n\n\n\n\nfunction ApolloServerPluginSchemaReporting({ initialDelayMaxMs, overrideReportedSchema, endpointUrl, fetcher, } = Object.create(null)) {\n    const bootId = (0,uuid__WEBPACK_IMPORTED_MODULE_6__[\"default\"])();\n    return (0,_internalPlugin_js__WEBPACK_IMPORTED_MODULE_1__.internalPlugin)({\n        __internal_plugin_id__: 'SchemaReporting',\n        __is_disabled_plugin__: false,\n        async serverWillStart({ apollo, schema, logger }) {\n            const { key, graphRef } = apollo;\n            if (!key) {\n                throw Error('To use ApolloServerPluginSchemaReporting, you must provide an Apollo API ' +\n                    'key, via the APOLLO_KEY environment variable or via `new ApolloServer({apollo: {key})`');\n            }\n            if (!graphRef) {\n                throw Error('To use ApolloServerPluginSchemaReporting, you must provide your graph ref (eg, ' +\n                    \"'my-graph-id@my-graph-variant'). Try setting the APOLLO_GRAPH_REF environment \" +\n                    'variable or passing `new ApolloServer({apollo: {graphRef}})`.');\n            }\n            if (overrideReportedSchema) {\n                try {\n                    const validationErrors = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.validateSchema)((0,graphql__WEBPACK_IMPORTED_MODULE_8__.buildSchema)(overrideReportedSchema, { noLocation: true }));\n                    if (validationErrors.length) {\n                        throw new Error(validationErrors.map((error) => error.message).join('\\n'));\n                    }\n                }\n                catch (err) {\n                    throw new Error('The schema provided to overrideReportedSchema failed to parse or ' +\n                        `validate: ${err.message}`);\n                }\n            }\n            if ((0,_schemaIsSubgraph_js__WEBPACK_IMPORTED_MODULE_3__.schemaIsSubgraph)(schema)) {\n                throw Error([\n                    'Schema reporting is not yet compatible with Apollo Federation subgraphs.',\n                    \"If you're interested in using schema reporting with subgraphs,\",\n                    'please contact Apollo support. To set up managed federation, see',\n                    'https://go.apollo.dev/s/managed-federation',\n                ].join(' '));\n            }\n            if (endpointUrl !== undefined) {\n                logger.info(`Apollo schema reporting: schema reporting URL override: ${endpointUrl}`);\n            }\n            const baseSchemaReport = {\n                bootId,\n                graphRef,\n                platform: process.env.APOLLO_SERVER_PLATFORM || 'local',\n                runtimeVersion: `node ${process.version}`,\n                userVersion: process.env.APOLLO_SERVER_USER_VERSION,\n                serverId: process.env.APOLLO_SERVER_ID || process.env.HOSTNAME || os__WEBPACK_IMPORTED_MODULE_0__.hostname(),\n                libraryVersion: `@apollo/server@${_generated_packageVersion_js__WEBPACK_IMPORTED_MODULE_4__.packageVersion}`,\n            };\n            let currentSchemaReporter;\n            return {\n                schemaDidLoadOrUpdate({ apiSchema, coreSupergraphSdl }) {\n                    if (overrideReportedSchema !== undefined) {\n                        if (currentSchemaReporter) {\n                            return;\n                        }\n                        else {\n                            logger.info('Apollo schema reporting: schema to report has been overridden');\n                        }\n                    }\n                    const coreSchema = overrideReportedSchema ??\n                        coreSupergraphSdl ??\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_9__.printSchema)(apiSchema);\n                    const coreSchemaHash = (0,_utils_computeCoreSchemaHash_js__WEBPACK_IMPORTED_MODULE_5__.computeCoreSchemaHash)(coreSchema);\n                    const schemaReport = {\n                        ...baseSchemaReport,\n                        coreSchemaHash,\n                    };\n                    currentSchemaReporter?.stop();\n                    currentSchemaReporter = new _schemaReporter_js__WEBPACK_IMPORTED_MODULE_2__.SchemaReporter({\n                        schemaReport,\n                        coreSchema,\n                        apiKey: key,\n                        endpointUrl,\n                        logger,\n                        initialReportingDelayInMs: Math.floor(Math.random() * (initialDelayMaxMs ?? 10000)),\n                        fallbackReportingDelayInMs: 20000,\n                        fetcher,\n                    });\n                    currentSchemaReporter.start();\n                    logger.info('Apollo schema reporting: reporting a new schema to Studio! See your graph at ' +\n                        `https://studio.apollographql.com/graph/${encodeURI(graphRef)}/ with server info ${JSON.stringify(schemaReport)}`);\n                },\n                async serverWillStop() {\n                    currentSchemaReporter?.stop();\n                },\n            };\n        },\n    });\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/dist/esm/plugin/schemaReporting/index.js?");

/***/ }),

/***/ "../../node_modules/@apollo/server/dist/esm/plugin/schemaReporting/schemaReporter.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@apollo/server/dist/esm/plugin/schemaReporting/schemaReporter.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemaReporter: () => (/* binding */ SchemaReporter),\n/* harmony export */   schemaReportGql: () => (/* binding */ schemaReportGql)\n/* harmony export */ });\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"../../node_modules/@apollo/server/node_modules/node-fetch/lib/index.mjs\");\n/* harmony import */ var _generated_packageVersion_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../generated/packageVersion.js */ \"../../node_modules/@apollo/server/dist/esm/generated/packageVersion.js\");\n\n\nconst schemaReportGql = `#graphql\n  mutation SchemaReport($report: SchemaReport!, $coreSchema: String) {\n    reportSchema(report: $report, coreSchema: $coreSchema) {\n      __typename\n      ... on ReportSchemaError {\n        message\n        code\n      }\n      ... on ReportSchemaResponse {\n        inSeconds\n        withCoreSchema\n      }\n    }\n  }\n`;\nclass SchemaReporter {\n    constructor(options) {\n        this.headers = {\n            'Content-Type': 'application/json',\n            'x-api-key': options.apiKey,\n            'apollographql-client-name': 'ApolloServerPluginSchemaReporting',\n            'apollographql-client-version': _generated_packageVersion_js__WEBPACK_IMPORTED_MODULE_1__.packageVersion,\n        };\n        this.endpointUrl =\n            options.endpointUrl ||\n                'https://schema-reporting.api.apollographql.com/api/graphql';\n        this.schemaReport = options.schemaReport;\n        this.coreSchema = options.coreSchema;\n        this.isStopped = false;\n        this.logger = options.logger;\n        this.initialReportingDelayInMs = options.initialReportingDelayInMs;\n        this.fallbackReportingDelayInMs = options.fallbackReportingDelayInMs;\n        this.fetcher = options.fetcher ?? node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    }\n    stopped() {\n        return this.isStopped;\n    }\n    start() {\n        this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.initialReportingDelayInMs);\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.pollTimer) {\n            clearTimeout(this.pollTimer);\n            this.pollTimer = undefined;\n        }\n    }\n    async sendOneReportAndScheduleNext(sendNextWithCoreSchema) {\n        this.pollTimer = undefined;\n        if (this.stopped())\n            return;\n        try {\n            const result = await this.reportSchema(sendNextWithCoreSchema);\n            if (!result) {\n                return;\n            }\n            if (!this.stopped()) {\n                this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(result.withCoreSchema), result.inSeconds * 1000);\n            }\n            return;\n        }\n        catch (error) {\n            this.logger.error(`Error reporting server info to Apollo during schema reporting: ${error}`);\n            if (!this.stopped()) {\n                this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.fallbackReportingDelayInMs);\n            }\n        }\n    }\n    async reportSchema(withCoreSchema) {\n        const { data, errors } = await this.apolloQuery({\n            report: this.schemaReport,\n            coreSchema: withCoreSchema ? this.coreSchema : null,\n        });\n        if (errors) {\n            throw new Error(errors.map((x) => x.message).join('\\n'));\n        }\n        function msgForUnexpectedResponse(data) {\n            return [\n                'Unexpected response shape from Apollo when',\n                'reporting schema. If this continues, please reach',\n                'out to support@apollographql.com.',\n                'Received response:',\n                JSON.stringify(data),\n            ].join(' ');\n        }\n        if (!data || !data.reportSchema) {\n            throw new Error(msgForUnexpectedResponse(data));\n        }\n        if (data.reportSchema.__typename === 'ReportSchemaResponse') {\n            return data.reportSchema;\n        }\n        else if (data.reportSchema.__typename === 'ReportSchemaError') {\n            this.logger.error([\n                'Received input validation error from Apollo:',\n                data.reportSchema.message,\n                'Stopping reporting. Please fix the input errors.',\n            ].join(' '));\n            this.stop();\n            return null;\n        }\n        throw new Error(msgForUnexpectedResponse(data));\n    }\n    async apolloQuery(variables) {\n        const request = {\n            query: schemaReportGql,\n            variables,\n        };\n        const httpResponse = await this.fetcher(this.endpointUrl, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify(request),\n        });\n        if (!httpResponse.ok) {\n            throw new Error([\n                `An unexpected HTTP status code (${httpResponse.status}) was`,\n                'encountered during schema reporting.',\n            ].join(' '));\n        }\n        try {\n            return await httpResponse.json();\n        }\n        catch (error) {\n            throw new Error([\n                \"Couldn't report schema to Apollo.\",\n                'Parsing response as JSON failed.',\n                'If this continues please reach out to support@apollographql.com',\n                error,\n            ].join(' '));\n        }\n    }\n}\n//# sourceMappingURL=schemaReporter.js.map\n\n//# sourceURL=webpack://server/../../node_modules/@apollo/server/dist/esm/plugin/schemaReporting/schemaReporter.js?");

/***/ })

};
;